-- MySQL Script generated by MySQL Workbench
-- 03/10/15 22:36:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema restaurant
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema restaurant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `restaurant` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `restaurant` ;

-- -----------------------------------------------------
-- Table `restaurant`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`cashier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`cashier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(100) NOT NULL,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` TIMESTAMP NOT NULL,
  `total_price` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `cashier_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cashier_id`),
  INDEX `fk_order_customer1_idx` (`customer_id` ASC),
  INDEX `fk_order_cashier1_idx` (`cashier_id` ASC),
  CONSTRAINT `fk_order_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `restaurant`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_cashier1`
    FOREIGN KEY (`cashier_id`)
    REFERENCES `restaurant`.`cashier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`menu` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `price` INT NULL,
  `pict_url` VARCHAR(2048) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`order_detail` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` INT NULL,
  `menu_id` INT NOT NULL,
  `quantity` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`, `menu_id`),
  INDEX `fk_order_detail_menu1_idx` (`menu_id` ASC),
  CONSTRAINT `fk_order_detail_menu1`
    FOREIGN KEY (`menu_id`)
    REFERENCES `restaurant`.`menu` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`order_has_order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`order_has_order_detail` (
  `order_id` INT NOT NULL,
  `order_detail_id` INT NOT NULL,
  PRIMARY KEY (`order_id`, `order_detail_id`),
  INDEX `fk_order_has_order_detail_order_detail1_idx` (`order_detail_id` ASC),
  INDEX `fk_order_has_order_detail_order_idx` (`order_id` ASC),
  CONSTRAINT `fk_order_has_order_detail_order`
    FOREIGN KEY (`order_id`)
    REFERENCES `restaurant`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_has_order_detail_order_detail1`
    FOREIGN KEY (`order_detail_id`)
    REFERENCES `restaurant`.`order_detail` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
